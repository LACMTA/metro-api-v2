"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1224],{60267:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var o=e(87462),n=(e(67294),e(3905));const i={slug:"api-documentation-launch",title:"API 2.0 Documentation Launch \ud83d\ude80",authors:["albert"],tags:["documentation","api"]},r=void 0,s={permalink:"/metro-api-v2/blog/api-documentation-launch",source:"@site/blog/2023-03-20.mdx",title:"API 2.0 Documentation Launch \ud83d\ude80",description:"Metro API 2.0 has launched into BETA, which means we are scaling up for wide spread usage. If you have any issues, please head on over to the GitHub Issue's board and add an issue",date:"2023-03-20T00:00:00.000Z",formattedDate:"March 20, 2023",tags:[{label:"documentation",permalink:"/metro-api-v2/blog/tags/documentation"},{label:"api",permalink:"/metro-api-v2/blog/tags/api"}],readingTime:.565,hasTruncateMarker:!1,authors:[{name:"Albert Kochaphum",title:"API Guy",url:"https://github.com/albertkun",imageURL:"https://avatars.githubusercontent.com/u/8574425?v=4",key:"albert"}],frontMatter:{slug:"api-documentation-launch",title:"API 2.0 Documentation Launch \ud83d\ude80",authors:["albert"],tags:["documentation","api"]},prevItem:{title:"Hello World!",permalink:"/metro-api-v2/blog/hello-world"},nextItem:{title:"Long Blog Post",permalink:"/metro-api-v2/blog/long-blog-post"}},l={authorsImageUrls:[void 0]},u=[{value:"API Architecture",id:"api-architecture",level:2},{value:"Data",id:"data",level:3},{value:"Data Sources",id:"data-sources",level:4}],d={toc:u},c="wrapper";function p(t){let{components:a,...e}=t;return(0,n.kt)(c,(0,o.Z)({},d,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Metro API 2.0 has launched into BETA, which means we are scaling up for wide spread usage. If you have any issues, please head on over to the GitHub Issue's board and add an ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/LACMTA/metro-api-v2/issues"},"issue")," "),(0,n.kt)("h2",{id:"api-architecture"},"API Architecture"),(0,n.kt)("p",null,"The API is composed of the following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"data-loading-service")," - the backend ",(0,n.kt)("strong",{parentName:"li"},"docker")," container that routinely executes Python scripts and ",(0,n.kt)("a",{parentName:"li",href:"https://pandas.pydata.org/"},"pandas")," to load data into the PostgreSQL database."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"api")," - the frontend ",(0,n.kt)("strong",{parentName:"li"},"docker")," container that hosts the connections to the database using ",(0,n.kt)("a",{parentName:"li",href:"https://fastapi.tiangolo.com/"},"fastapi"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"documentation")," - a static generated website built with ",(0,n.kt)("a",{parentName:"li",href:"https://docusaurus.io/"},"docusaurus"),".")),(0,n.kt)("mermaid",{value:"graph TD;\n    id1(Data Loading Service)--\x3eAPI;\n    API--\x3eDocumentation;"}),(0,n.kt)("h3",{id:"data"},"Data"),(0,n.kt)("p",null," put into a PostgreSQL database  "),(0,n.kt)("h4",{id:"data-sources"},"Data Sources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"GTFS Data")))}p.isMDXComponent=!0}}]);